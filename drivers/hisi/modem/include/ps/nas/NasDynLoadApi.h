/******************************************************************************

                  版权所有 (C), 2001-2011, 华为技术有限公司

 ******************************************************************************
  文 件 名   : NasDynLoadApi.h
  版 本 号   : 初稿
  作    者   : w00242748
  生成日期   : 2015年8月10日
  最近修改   :
  功能描述   : NasDynLoadApi.c 的头文件
  函数列表   :
  修改历史   :
  1.日    期   : 2015年8月10日
    作    者   : w00242748
    修改内容   : 创建文件

******************************************************************************/

#ifndef __NAS_DYNLOAD_API_H__
#define __NAS_DYNLOAD_API_H__

/*****************************************************************************
  1 其他头文件包含
*****************************************************************************/
#include "vos.h"
#include "PsCommonDef.h"
#include "PsLogdef.h"
#include "VosPidDef.h"

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif


#pragma pack(4)

/*****************************************************************************
  2 宏定义
*****************************************************************************/

/*****************************************************************************
  3 枚举定义
*****************************************************************************/
/*****************************************************************************
 枚举名    : NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM
 结构说明  : 动态加载的加载方式
 1.日    期   : 2015年8月11日
   作    者   : w00242748
   修改内容   : 新建

*****************************************************************************/
enum NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM
{
    NAS_DYNLOAD_LOAD_RATCOMB_TYPE_T_W          = 0,
    NAS_DYNLOAD_LOAD_RATCOMB_TYPE_BUTT
};
typedef VOS_UINT32 NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM_UINT32;


/*****************************************************************************
  4 全局变量声明
*****************************************************************************/


/*****************************************************************************
  5 消息头定义
*****************************************************************************/


/*****************************************************************************
  6 消息定义
*****************************************************************************/


/*****************************************************************************
  7 STRUCT定义
*****************************************************************************/
/*****************************************************************************
 结构名    : NA
 结构说明  : NAS动态加载时需调用的初始化函数
 1.日    期   : 2015年8月10日
   作    者   : w00242748
   修改内容   : 新增
*****************************************************************************/
typedef VOS_VOID (*NAS_DYNLOAD_INIT_CB)(VOS_VOID);

/*****************************************************************************
 结构名    : NA
 结构说明  : NAS动态加载时需调用的卸载函数
 1.日    期   : 2015年8月10日
   作    者   : w00242748
   修改内容   : 新增
*****************************************************************************/
typedef VOS_VOID (*NAS_DYNLOAD_UNLOAD_CB)(VOS_VOID);

/*****************************************************************************
 结构名    : NA
 结构说明  : TAF调用WAS接口的函数原型
 1.日    期   : 2015年9月29日
   作    者   : w00242748
   修改内容   : 新增
*****************************************************************************/
typedef VOS_UINT32 (*WAS_QueryCSNR)(
    VOS_INT16                          *psCpichRscp,
    VOS_INT16                          *psCpichEcNo
);

/*****************************************************************************
  8 UNION定义
*****************************************************************************/


/*****************************************************************************
  9 OTHERS定义
*****************************************************************************/


/*****************************************************************************
  10 函数声明
*****************************************************************************/
VOS_VOID TAF_RegQueryCsnrCallBack(
    WAS_QueryCSNR                      pfQueryCsnr
);

WAS_QueryCSNR TAF_GetWasQueryCsnrAddr(VOS_VOID);


#if (FEATURE_ON == FEATURE_TDS_WCDMA_DYNAMIC_LOAD)
VOS_UINT32 NAS_DYNLOAD_RegLoadCallBack(
    VOS_RATMODE_ENUM_UINT32             enRatMode,
    VOS_UINT32                          ulPID,
    NAS_DYNLOAD_INIT_CB                 pfInit,
    NAS_DYNLOAD_UNLOAD_CB               pfUnload
);

VOS_UINT32 NAS_DYNLOAD_DeRegLoadCallBack(
    VOS_RATMODE_ENUM_UINT32             enRatMode,
    VOS_UINT32                          ulPID
);

VOS_UINT32 NAS_DYNLOAD_UnloadAS(
    NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM_UINT32               enRatCombType,
    VOS_RATMODE_ENUM_UINT32                                 enVosRatType
);

VOS_UINT32 NAS_DYNLOAD_LoadAS(
    NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM_UINT32               enRatCombType,
    VOS_RATMODE_ENUM_UINT32                                 enVosRatType
);

VOS_RATMODE_ENUM_UINT32 NAS_DYNLOAD_GetCurRatInCached(
    NAS_DYNLOAD_LOAD_RATCOMB_TYPE_ENUM_UINT32               enRatCombType
);
#endif

#if (VOS_OS_VER == VOS_WIN32)
#pragma pack()
#else
#pragma pack(0)
#endif




#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif

#endif /* end of NasDynLoadApi.h */



