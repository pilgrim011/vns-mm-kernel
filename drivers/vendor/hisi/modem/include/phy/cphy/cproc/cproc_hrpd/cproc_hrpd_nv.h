/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-03-02
 * @file
 * @brief
 *
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CPROC_HRPD_NV_H
#define CPROC_HRPD_NV_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"
#include "PhyNvDefine.h"
#include "cproc_hrpd.h"
#include "uphy_type_define.h"
#include "NasNvInterface.h"

#ifdef __cplusplus
#if __cplusplus
extern "C"{
#endif /* __cplusplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/
#define CPROC_HRPD_GetNvContextAddress()         ( pstCprocHrpdNvContext )

#define CPROC_HRPD_GetCfGapLengthAddress()       ( &(CPROC_HRPD_GetNvContextAddress())->stUcomNvCdmaCfGapLength )

#define CPROC_HRPD_GetCfGapLength()              ( (CPROC_HRPD_GetCfGapLengthAddress())->uhwCfGapLength )

#define CPROC_HRPD_GetFreqChannelList()          ( &(CPROC_HRPD_GetNvContextAddress())->stCnasNvimCtccCustomizeFreqList )


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CPROC_HRPD_NV_MSG_TYPE_ENUM
{
    ID_APM_CPROC_HRPD_ACTIVE_REQ            = 0xF000, /**< @sa APM_CPROC_HRPD_ACTIVE_REQ_STRU */
    ID_CPROC_APM_HRPD_ACTIVE_CNF            = 0xF001, /**< @sa CPROC_APM_HRPD_ACTIVE_CNF_STRU */
    ID_APM_CPROC_HRPD_NONPROTOCOL_START_REQ = 0xF002, /**< @sa APM_CPROC_HRPD_NONPROTOCOL_START_REQ_STRU */
    ID_APM_CPROC_HRPD_NONPROTOCOL_STOP_REQ  = 0xF003, /**< @sa APM_CPROC_HRPD_NONPROTOCOL_STOP_REQ_STRU */
    ID_APM_CPROC_HRPD_SAR_CTRL_REQ          = 0xF004, /**< @sa APM_CPROC_HRPD_SAR_CTRL_REQ_STRU */
    ID_CPROC_APM_HRPD_WORK_MODE_IND         = 0xF005, /**< @sa CPROC_APM_HRPD_WORK_MODE_IND_STRU */
    ID_CPROC_HRPD_NV_MSG_TYPE_ENUM_BUTT     = 0xFFFF
};
typedef VOS_UINT16 CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/
/** ****************************************************************************
 * Name        : APM_CPROC_HRPD_NONPROTOCOL_START_REQ_STRU
 *
 * Description : APM_CPROC_HRPD_NONPROTOCOL_START_REQ requests CPROC to start
 * non-procotol task. It carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
} APM_CPROC_HRPD_NONPROTOCOL_START_REQ_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_HRPD_NONPROTOCOL_STOP_REQ_STRU
 *
 * Description : APM_CPROC_HRPD_NONPROTOCOL_STOP_REQ requests CPROC to stop
 * non-procotol task. It carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
} APM_CPROC_HRPD_NONPROTOCOL_STOP_REQ_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_HRPD_SAR_CTRL_REQ_STRU
 *
 * Description : APM_CPROC_HRPD_SAR_CTRL_REQ requests to control SAR. CPROC
 * deliverys it to CSDR.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
    VOS_UINT32                          ulMask;         /**< Change type, 1: uwAntennaStatus valid, 2: uwSarReduction valid, other: invalid */
    VOS_INT32                           lAntenStatus;   /**< Current antenna connect status,  0: wireless, 1: wire, valid when uwMask = 1 */
    VOS_UINT32                          ulSarReduction; /**< Power back off level, range [0..5], SAR power step, valid when uwMask = 2 */
} APM_CPROC_HRPD_SAR_CTRL_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_HRPD_WORK_MODE_IND_STRU
 *
 * Description : When received CAS_CPROC_HRPD_SET_WORK_MODE_REQ,
 * CPROC_APM_HRPD_WORK_MODE_IND tells APM whick work mode HRPD is at.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
    CPROC_HRPD_WORKMODE_ENUM_UINT16     enWorkMode; /**< 0: Master Mode, 1: Slave Mode */
    VOS_UINT16                          usReserved; /**< 32 bit alignment */
} CPROC_APM_HRPD_WORK_MODE_IND_STRU;

typedef struct CPROC_HRPD_NV_TABLE_STRU
{
    UCOM_NV_CDMA_HRPD_CPROC_GENERAL_STRU stGeneral;
    UCOM_NV_SINGLE_XO_DEFINE_STRU        stXoDefine;
}CPROC_HRPD_NV_TABLE_STRU;

/*****************************************************************************
  6 STRUCT declarations
*****************************************************************************/
typedef struct CPROC_HRPD_NV_CONTEXT_STRU
{
    UCOM_NV_CDMA_CF_GAP_LENGTH_STRU            stUcomNvCdmaCfGapLength;
    CNAS_NVIM_CTCC_CUSTOMIZE_FREQ_LIST_STRU    stCnasNvimCtccCustomizeFreqList;
}CPROC_HRPD_NV_CONTEXT_STRU;

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : APM_CPROC_HRPD_ACTIVE_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
} APM_CPROC_HRPD_ACTIVE_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_HRPD_ACTIVE_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC_HRPD_NV_MSG_TYPE_ENUM_UINT16  enMsgId;
    VOS_UINT16                          usOpId;
} CPROC_APM_HRPD_ACTIVE_CNF_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*****************************************************************************
  9 Global variables
*****************************************************************************/

/*****************************************************************************
  10 Function declarations
*****************************************************************************/
extern CPROC_HRPD_NV_CONTEXT_STRU *pstCprocHrpdNvContext;
PHY_VOID CPROC_HRPD_ReadNvTable( PHY_VOID );

/** ****************************************************************************
 * Name        : CPROC_HRPD_GetNvAddress
 *
 * Description :
 *******************************************************************************/
CPROC_HRPD_NV_TABLE_STRU* CPROC_HRPD_GetNvAddress(void);

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cplusplus */
#endif /* __cpluscplus */

#endif /* INCLUSION_GUARD_CPROC_HRPD_NV_H */

