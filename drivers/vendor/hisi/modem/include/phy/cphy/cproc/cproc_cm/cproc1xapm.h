/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-11-21
 * @file
 * @brief
 * This is the interface between APM and CPROC_1X, regarding activation.
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef CPROC1XAPM_H
#define CPROC1XAPM_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "uphy_type_define.h"
#include "cproc1xcm.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : CPROC1XAPM_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum CPROC1XAPM_MSG_TYPE_ENUM
{
    ID_APM_CPROC_1X_NONPROTOCOL_START_REQ                   = 0x0000, /**< @sa APM_CPROC_1X_NONPROTOCOL_START_REQ_STRU */
    ID_APM_CPROC_1X_NONPROTOCOL_STOP_REQ                    = 0x0001, /**< @sa APM_CPROC_1X_NONPROTOCOL_STOP_REQ_STRU */
    ID_APM_CPROC_1X_SAR_CTRL_REQ                            = 0x0002, /**< @sa APM_CPROC_1X_SAR_CTRL_REQ_STRU */
    ID_CPROC_APM_1X_WORK_MODE_IND                           = 0x0003, /**< @sa CPROC_APM_1X_WORK_MODE_IND_STRU */
    ID_APM_CPROC_1X_ACTIVE_REQ                              = 0x0004, /**< @sa APM_CPROC_1X_ACTIVE_REQ_STRU */
    ID_CPROC_APM_1X_ACTIVE_IND                              = 0x0005, /**< @sa CPROC_APM_1X_ACTIVE_IND_STRU */
    ID_CPROC1XAPM_MSG_TYPE_ENUM_BUTT                        = 0x0006
};
typedef PHY_UINT16 CPROC1XAPM_MSG_TYPE_ENUM_UINT16;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : APM_CPROC_1X_NONPROTOCOL_START_REQ_STRU
 *
 * Description : APM_CPROC_1X_NONPROTOCOL_START_REQ requests CPROC to start
 * non-procotol task. It carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
} APM_CPROC_1X_NONPROTOCOL_START_REQ_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_1X_NONPROTOCOL_STOP_REQ_STRU
 *
 * Description : APM_CPROC_1X_NONPROTOCOL_STOP_REQ requests CPROC to stop
 * non-procotol task. It carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
} APM_CPROC_1X_NONPROTOCOL_STOP_REQ_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_1X_SAR_CTRL_REQ_STRU
 *
 * Description : APM_CPROC_1X_SAR_CTRL_REQ requests to control SAR. CPROC
 * deliverys it to CSDR.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
    PHY_UINT32                          ulMask;         /**< Change type, 1: lAntenStatus valid, 2: ulSarReduction valid, others invalid. */
    PHY_INT32                           lAntenStatus;   /**< Current antenna connect status. 0: wireless, 1: wired, valid when ulMask = 1. */
    PHY_UINT32                          ulSarReduction; /**< Power back off level. range [0...5], SAR power step, valid when ulMask = 2. */
} APM_CPROC_1X_SAR_CTRL_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_1X_WORK_MODE_IND_STRU
 *
 * Description : CPROC_APM_1X_WORK_MODE_IND tells either Slave or Master Mode
 * to APM.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
    CPROC_1X_WORK_MODE_ENUM_UINT16      enWorkMode; /**< 0: Slave Mode, 1: MasterMode */
    PHY_UINT16                          usReserved; /**< 32 bit alignment */
} CPROC_APM_1X_WORK_MODE_IND_STRU;

/** ****************************************************************************
 * Name        : APM_CPROC_1X_ACTIVE_REQ_STRU
 *
 * Description : APM_CPROC_1X_ACTIVE_REQ requests CPHY to activate when the
 * boot information is in place. it carries no parameters.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
} APM_CPROC_1X_ACTIVE_REQ_STRU;

/** ****************************************************************************
 * Name        : CPROC_APM_1X_ACTIVE_IND_STRU
 *
 * Description : CPROC_APM_1X_ACTIVE_IND tells APM that CPHY has activated
 * according to the request.
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    CPROC1XAPM_MSG_TYPE_ENUM_UINT16     enMsgId;
    PHY_UINT16                          uhwOpId;
    PHY_UINT16                          uhwReserved;
    PHY_UINT16                          uhwResult;
} CPROC_APM_1X_ACTIVE_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/

#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
