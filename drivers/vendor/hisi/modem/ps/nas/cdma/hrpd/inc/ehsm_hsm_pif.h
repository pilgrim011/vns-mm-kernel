/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2015

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2015-05-29
 * @file
 * @brief
 *
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef EHSM_HSM_PIF_H
#define EHSM_HSM_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/

#include "vos.h"

#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16
 *
 * Description :
 *******************************************************************************/
enum EHSM_HSM_PIF_MSG_TYPE_ENUM
{
    ID_EHSM_HSM_CONN_EST_REQ            = 0x0000, /* _H2ASN_MsgChoice EHSM_HSM_CONN_EST_REQ_STRU *//**< @sa EHSM_HSM_CONN_EST_REQ_STRU */
    ID_HSM_EHSM_CONN_EST_CNF            = 0x0001, /* _H2ASN_MsgChoice HSM_EHSM_CONN_EST_CNF_STRU *//**< @sa HSM_EHSM_CONN_EST_CNF_STRU */
    ID_EHSM_HSM_DISC_REQ                = 0x0002, /* _H2ASN_MsgChoice EHSM_HSM_DISC_REQ_STRU *//**< @sa EHSM_HSM_DISC_REQ_STRU */
    ID_HSM_EHSM_DISC_CNF                = 0x0003, /* _H2ASN_MsgChoice HSM_EHSM_DISC_CNF_STRU *//**< @sa HSM_EHSM_DISC_CNF_STRU */
    ID_HSM_EHSM_DISC_IND                = 0x0004, /* _H2ASN_MsgChoice HSM_EHSM_DISC_IND_STRU *//**< @sa HSM_EHSM_DISC_IND_STRU */
    ID_HSM_EHSM_IRAT_LTE_IND            = 0x0005, /* _H2ASN_MsgChoice HSM_EHSM_IRAT_LTE_IND_STRU *//**< @sa HSM_EHSM_IRAT_LTE_IND_STRU */
    ID_HSM_EHSM_SESSION_INFO_IND        = 0x0006, /* _H2ASN_MsgChoice HSM_EHSM_SESSION_INFO_IND_STRU *//**< @sa HSM_EHSM_SESSION_INFO_IND_STRU */
    ID_EHSM_HSM_EHRPD_NOT_AVAILABLE_IND = 0x0007, /* _H2ASN_MsgChoice EHSM_HSM_EHRPD_NOT_AVAILABLE_IND_STRU *//**< @sa EHSM_HSM_EHRPD_NOT_AVAILABLE_IND_STRU */
    ID_HSM_EHSM_SUSPEND_IND             = 0x0008, /* _H2ASN_MsgChoice HSM_EHSM_SUSPEND_IND_STRU *//**< @sa HSM_EHSM_SUSPEND_IND_STRU */
    ID_EHSM_HSM_LTE_REG_SUCCESS_IND     = 0x0009, /* _H2ASN_MsgChoice EHSM_HSM_LTE_REG_SUCCESS_IND_STRU *//**< @sa EHSM_HSM_LTE_REG_SUCCESS_IND_STRU */
    ID_HSM_EHSM_CONNECT_IND             = 0x000A, /* _H2ASN_MsgChoice HSM_EHSM_CONNECT_IND_STRU *//**< @sa HSM_EHSM_CONNECT_IND_STRU */
    ID_EHSM_HSM_PIF_MSG_TYPE_ENUM_BUTT  = 0xFFFF
};
typedef VOS_UINT16 EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : EHSM_HSM_RSLT_ENUM_UINT32
 *
 * Description :
 *******************************************************************************/
enum EHSM_HSM_RSLT_ENUM
{
    EHSM_HSM_RSLT_SUCCESS               = 0x00000000,
    EHSM_HSM_RSLT_CONN_FAIL             = 0x00000001,
    EHSM_HSM_RSLT_MAX_ACCESS_PROBES     = 0x00000002,
    EHSM_HSM_RSLT_CONN_DENY             = 0x00000003,
    EHSM_HSM_RSLT_RTCACK_FAIL           = 0x00000004,
    EHSM_HSM_RSLT_SIGNAL_FADE           = 0x00000005,
    EHSM_HSM_RSLT_CAN_NOT_EST_CONN      = 0x00000006,  /* 1、先收到掉网，后收到建链请求；
                                                          2、装换后cas状态一直为init，需要重拨处理 */
    EHSM_HSM_RSLT_TIMEOUT               = 0x00000007,
    EHSM_HSM_RSLT_HRPD_SLAVE            = 0x00000008,  /* 需要重拨 */
    EHSM_HSM_RSLT_SESSION_NOT_EXIST     = 0x00000009,
    EHSM_HSM_RSLT_IN_UATI_PROCEDURE     = 0x0000000A,  /* 需要重拨 */
    EHSM_HSM_RSLT_IN_SCP_PROCEDURE      = 0x0000000B,  /* session激活过程中收到建链请求，需要重拨 */
    EHSM_HSM_RSLT_NO_RF                 = 0x0000000C,
    EHSM_HSM_RSLT_REDIRECT              = 0x0000000D,  /* 掉网原因值为重定向，需要重拨处理 */
    EHSM_HSM_RSLT_PREFER_CH_NOT_VALID   = 0x0000000E,
    EHSM_HSM_RSLT_BUTT                  = 0x0FFFFFFF
};
typedef VOS_UINT32 EHSM_HSM_RSLT_ENUM_UINT32;

/** ****************************************************************************
 * Name        : EHSM_HSM_SESSION_TYPE_ENUM_UINT32
 *
 * Description :
 *******************************************************************************/
enum EHSM_HSM_SESSION_TYPE_ENUM
{
    EHSM_HSM_SESSION_TYPE_NULL          = 0x00000000,
    EHSM_HSM_SESSION_TYPE_HRPD          = 0x00000001,
    EHSM_HSM_SESSION_TYPE_EHRPD         = 0x00000002,
    EHSM_HSM_SESSION_TYPE_BUTT          = 0x0FFFFFFF
};
typedef VOS_UINT32 EHSM_HSM_SESSION_TYPE_ENUM_UINT32;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/

/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/

/** ****************************************************************************
 * Name        : EHSM_HSM_CONN_EST_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} EHSM_HSM_CONN_EST_REQ_STRU;


/** ****************************************************************************
 * Name        : HSM_EHSM_CONN_EST_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    EHSM_HSM_RSLT_ENUM_UINT32           enResult;
} HSM_EHSM_CONN_EST_CNF_STRU;

/** ****************************************************************************
 * Name        : EHSM_HSM_DISC_REQ_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} EHSM_HSM_DISC_REQ_STRU;

/** ****************************************************************************
 * Name        : HSM_EHSM_DISC_CNF_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} HSM_EHSM_DISC_CNF_STRU;

/** ****************************************************************************
 * Name        : HSM_EHSM_DISC_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} HSM_EHSM_DISC_IND_STRU;

/** ****************************************************************************
 * Name        : HSM_EHSM_IRAT_LTE_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} HSM_EHSM_IRAT_LTE_IND_STRU;

/** ****************************************************************************
 * Name        : HSM_EHSM_SESSION_INFO_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    EHSM_HSM_SESSION_TYPE_ENUM_UINT32   enSessionType;
} HSM_EHSM_SESSION_INFO_IND_STRU;

/** ****************************************************************************
 * Name        : EHSM_HSM_EHRPD_NOT_AVAILABLE_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} EHSM_HSM_EHRPD_NOT_AVAILABLE_IND_STRU;

/** ****************************************************************************
 * Name        : HSM_EHSM_SUSPEND_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} HSM_EHSM_SUSPEND_IND_STRU;

/** ****************************************************************************
 * Name        : EHSM_HSM_LTE_REG_SUCCESS_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} EHSM_HSM_LTE_REG_SUCCESS_IND_STRU;


/** ****************************************************************************
 * Name        : HSM_EHSM_CONNECT_IND_STRU
 *
 * Description :
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                          /* _H2ASN_Skip */
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;            /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserved[4];
} HSM_EHSM_CONNECT_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/
/*****************************************************************************
  H2ASN顶级消息结构定义
*****************************************************************************/
typedef struct
{
    EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16   ulMsgId;                                /*_H2ASN_MsgChoice_Export EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16*/
    VOS_UINT8                           aucMsgBlock[2];
    /***************************************************************************
        _H2ASN_MsgChoice_When_Comment          EHSM_HSM_PIF_MSG_TYPE_ENUM_UINT16
    ****************************************************************************/
}EHSM_HSM_PIF_MSG_TYPE_DATA;
/*_H2ASN_Length UINT32*/

typedef struct
{
    VOS_MSG_HEADER
    EHSM_HSM_PIF_MSG_TYPE_DATA          stMsgReq;
}Ehsm_hsm_pif_MSG;


#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
