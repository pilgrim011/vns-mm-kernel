/** ****************************************************************************

                    Huawei Technologies Sweden AB (C), 2001-2011

 ********************************************************************************
 * @author    Automatically generated by DAISY
 * @version
 * @date      2014-07-02
 * @file
 * @brief
 * Physical interface between XSD and XREG
 * @copyright Huawei Technologies Sweden AB
 *******************************************************************************/
#ifndef XSD_XREG_PIF_H
#define XSD_XREG_PIF_H

/*******************************************************************************
 1. Other files included
*******************************************************************************/
#include "vos.h"
#include "PsTypeDef.h"
#include "cas_1x_control_main_nas_pif.h"


#ifdef __cplusplus
#if __cplusplus
    extern "C" {
#endif /* __cpluscplus */
#endif /* __cpluscplus */
#pragma pack(4)

/*******************************************************************************
 2. Macro definitions
*******************************************************************************/


/*******************************************************************************
 3. Enumerations declarations
*******************************************************************************/
/** ****************************************************************************
 * Name        : XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16
 * Description :
 *******************************************************************************/
enum XSD_XREG_PIF_MSG_TYPE_ENUM
{
    ID_XSD_XREG_START_REQ               = 0x0000, /* _H2ASN_MsgChoice XSD_XREG_START_REQ_STRU*/ /**< @sa XSD_XREG_START_REQ_STRU */
    ID_XREG_XSD_START_CNF               = 0x0001, /* _H2ASN_MsgChoice XREG_XSD_START_CNF_STRU*/ /**< @sa XREG_XSD_START_CNF_STRU */
    ID_XSD_XREG_POWER_OFF_REQ           = 0x0002, /* _H2ASN_MsgChoice XSD_XREG_POWER_OFF_REQ_STRU*/ /**< @sa XSD_XREG_POWER_OFF_REQ_STRU */
    ID_XREG_XSD_POWER_OFF_CNF           = 0x0003, /* _H2ASN_MsgChoice XREG_XSD_POWER_OFF_CNF_STRU*/ /**< @sa XREG_XSD_POWER_OFF_CNF_STRU */
    ID_XSD_XREG_SYS_INFO_IND            = 0x0004, /* _H2ASN_MsgChoice XSD_XREG_SYS_INFO_IND_STRU*/ /**< @sa XSD_XREG_SYS_INFO_IND_STRU */
    ID_XSD_XREG_REDIRECTION_IND         = 0x0005, /* _H2ASN_MsgChoice XSD_XREG_REDIRECTION_IND_STRU*/ /**< @sa XSD_XREG_REDIRECTION_IND_STRU */
    ID_XSD_XREG_DEREGISTER_IND          = 0x0006, /* _H2ASN_MsgChoice XSD_XREG_DEREGISTER_IND_STRU*/ /**< @sa XSD_XREG_DEREGISTER_IND_STRU */

    ID_XSD_XREG_UE_STATE_IND            = 0x0007, /* _H2ASN_MsgChoice XSD_XREG_UE_STATE_IND_STRU*/ /**< @sa XSD_XREG_UE_STATE_IND_STRU */
    ID_XREG_XSD_REG_SUCCESS_IND         = 0x0008, /* _H2ASN_MsgChoice XREG_XSD_REG_SUCCESS_IND_STRU*/ /**< @sa XREG_REG_SUCCESS_IND_STRU */

    ID_XSD_XREG_PIF_MSG_TYPE_ENUM_BUTT  = 0xFFFF
};
typedef VOS_UINT16 XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16;

/** ****************************************************************************
 * Name        : XSD_XREG_SERVICE_STATUS_ENUM_UINT32
 * Description : Service status
 *******************************************************************************/
enum XSD_XREG_SERVICE_STATUS_ENUM
{
    XSD_XREG_SERVICE_STATUS_NO_SERVICE                      = 0x00000000,
    XSD_XREG_SERVICE_STATUS_LIMITED_SERVICE                 = 0x00000001,
    XSD_XREG_SERVICE_STATUS_NORMAL_SERVICE                  = 0x00000002,
    XSD_XREG_SERVICE_STATUS_BUTT                            = 0x00000003
};
typedef VOS_UINT32 XSD_XREG_SERVICE_STATUS_ENUM_UINT32;

/** ****************************************************************************
 * Name        : XREG_XSD_START_RESULT_ENUM_UINT32
 * Description : Start result
 *******************************************************************************/
enum XREG_XSD_START_RESULT_ENUM
{
    XREG_XSD_START_RESULT_SUCC          = 0x00000000,
    XREG_XSD_START_RESULT_FAIL          = 0x00000001,
    XREG_XSD_START_RESULT_BUTT          = 0x00000002
};
typedef VOS_UINT32 XREG_XSD_START_RESULT_ENUM_UINT32;

/** ****************************************************************************
 * Name        : XSD_XREG_DEREGISTER_REASON_ENUM_UINT8
 * Description : deregister reason
 *******************************************************************************/
enum XSD_XREG_DEREGISTER_REASON_ENUM
{
    XSD_XREG_DEREGISTER_REASON_POWEROFF                         = 0x00000000,
    XSD_XREG_DEREGISTER_REASON_BUTT                             = 0x00000001
};
typedef VOS_UINT8 XSD_XREG_DEREGISTER_REASON_ENUM_UINT8;

/*******************************************************************************
 4. Message Header declaration
*******************************************************************************/

/*******************************************************************************
 5. Message declaration
*******************************************************************************/

/*******************************************************************************
 6. STRUCT and UNION declaration
*******************************************************************************/
/** ****************************************************************************
 * Name        : XSD_XREG_OHM_BASE_STATION_INFO_STRU
 * Description : Base station info of Overhead Message
 *******************************************************************************/
typedef struct
{
    VOS_UINT16                          usBaseId;        /**<  Base station identification */

    /* for user zone */
    VOS_UINT8                           ucBaseClass;     /**<  Base station class */
    VOS_UINT8                           aucReserve[1];
    VOS_INT32                           lBaseLatitude;   /**<  Base station latitude */

    /* reg & zone */
    VOS_INT32                           lBaseLongitude;  /**<  Base station longitude */

    /* reg & zone */
}XSD_XREG_OHM_BASE_STATION_INFO_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_OHM_REG_INFO_STRU
 * Description : Register info of Overhead Message
 *******************************************************************************/
typedef struct
{
    VOS_UINT16                          usRegZone;      /**<  Registration zone */
    VOS_UINT8                           ucRegZoneNum;   /**<  Number of registration zones to be retained */

    /* for reg */
    VOS_UINT8                           ucZoneTimer;    /**<  Zone timer length */

    /* for reg */
    VOS_UINT8                           ucMultiSidFlg;  /**<  Multiple SID storage indicator */

    /* for reg */
    VOS_UINT8                           ucMultiNidFlg;  /**<  Multiple NID storage indicator */

    /* for reg */
    VOS_UINT16                          usRegDistance;  /**<  Registration distance */

    /* for reg */
    VOS_UINT8                           ucRegPeriod;    /**<  Registration period */

    /* for reg */
    VOS_UINT8                           ucHomeReg;      /**<  Home registration indicator */
    VOS_UINT8                           ucSidRoamReg;   /**<  SID roamer registration indicator */

    /* for roam */
    VOS_UINT8                           ucNidRoamReg;   /**<  NID roamer registration indicator */

    /* for roam */
    VOS_UINT8                           ucPowerUpReg;   /**<  Power-up registration indicator */

    /* for reg */
    VOS_UINT8                           ucPowerDownReg; /**<  Power-down registration indicator */

    /* for reg */
    VOS_UINT8                           ucParameterReg; /**<  Parameter-change registration indicator */

    /* for reg */
    VOS_UINT8                           aucReserve[1];
}XSD_XREG_OHM_REG_INFO_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_OHM_SERVICE_INFO_STRU
 * Description : Service info of Overhead Message
 *******************************************************************************/
typedef struct
{
    VOS_UINT8                           ucMaxAltSo;            /**<  Max. Num. of alternative service options,for Origination or Page Response Message */
    VOS_UINT8                           ucSDBSupported;        /**<  Short Data Burst supported indicator */
    VOS_UINT8                           ucMoQos;               /**<  permission indicator for QoS in Origination message */
    VOS_UINT8                           ucConcurrentSupported; /**<  concurrent service supported */
    VOS_UINT8                           ucMoPosSupported;      /**<  MS initiated position location supported */
    VOS_UINT8                           aucReserve[1];
    VOS_UINT16                          usImsi11_12;           /**< 11th and 12th digits of the IMSI,invalid value=0xff */
    VOS_UINT32                          ulMcc;                 /**< Mobile country code,invalid value=0xff */
}XSD_XREG_OHM_SERVICE_INFO_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_SYS_INFO_STRU
 * Description : System info
 *******************************************************************************/
typedef struct
{
    VOS_UINT16                          usBandClass;
    VOS_UINT16                          usFreq;
    VOS_UINT16                          usSid;             /**<  System identification */
    VOS_UINT16                          usNid;             /**<  Network identification */
    VOS_UINT8                           ucPacketZoneId;    /**< Packet Data service zone identifier */
    PS_BOOL_ENUM_UINT8                  enRegInfoIncl;
    PS_BOOL_ENUM_UINT8                  enBaseStationInfoIncl;
    PS_BOOL_ENUM_UINT8                  enServiceInfoIncl;
    VOS_UINT8                           ucMaxSlotCycleIndex;   /**< Max Slot Cycle Index, 0.....7 */
    VOS_UINT8                           ucPRevInUse;
    VOS_UINT8                           aucReserve[2];
    XSD_XREG_OHM_REG_INFO_STRU          stRegInfo;
    XSD_XREG_OHM_BASE_STATION_INFO_STRU stBaseStationInfo;
    XSD_XREG_OHM_SERVICE_INFO_STRU      stServiceInfo;
}XSD_XREG_SYS_INFO_STRU;


/*******************************************************************************
 7. OTHER declarations
*******************************************************************************/
/** ****************************************************************************
 * Name        : XSD_XREG_START_REQ_STRU
 * Description : Start request
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                               /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId; /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
}XSD_XREG_START_REQ_STRU;

/** ****************************************************************************
 * Name        : XREG_XSD_START_CNF_STRU
 * Description : Start confirm
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                               /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId; /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    XREG_XSD_START_RESULT_ENUM_UINT32   enRslt;
}XREG_XSD_START_CNF_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_POWER_OFF_REQ_STRU
 * Description : Power off request
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                               /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId; /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
}XSD_XREG_POWER_OFF_REQ_STRU;

/** ****************************************************************************
 * Name        : XREG_XSD_POWER_OFF_CNF_STRU
 * Description : Power off confirm
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                               /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId; /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
}XREG_XSD_POWER_OFF_CNF_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_SYS_INFO_IND_STRU
 * Description : System info
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                       /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;         /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    XSD_XREG_SERVICE_STATUS_ENUM_UINT32 enServiceStatus;
    XSD_XREG_SYS_INFO_STRU              stSysInfo;
}XSD_XREG_SYS_INFO_IND_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_REDIRECTION_IND_STRU
 * Description : Redirection indication
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                  /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;    /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
    VOS_UINT8                           aucReserve[4];
}XSD_XREG_REDIRECTION_IND_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_DEREGISTER_IND_STRU
 * Description : Power off deregister indication
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                                      /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16                       enMsgId;    /* _H2ASN_Skip */
    VOS_UINT16                                              usOpId;
    XSD_XREG_DEREGISTER_REASON_ENUM_UINT8                   enCause;
    VOS_UINT8                                               aucRsv[3];
}XSD_XREG_DEREGISTER_IND_STRU;

/** ****************************************************************************
 * Name        : XSD_XREG_UE_STATE_IND_STRU
 * Description : UE STATE indication
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                                                          /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16                       enMsgId;        /* _H2ASN_Skip */
    VOS_UINT16                                              usOpId;
    CAS_CNAS_1X_CAS_STATE_ENUM_UINT8                        enCasState;
    CAS_CNAS_1X_CAS_SUB_STATE_ENUM_UINT8                    enCasSubState;
    VOS_UINT8                                               aucReserve[2];
}XSD_XREG_UE_STATE_IND_STRU;


/******************************************************************************
 * Name        : XREG_XSD_REG_SUCCESS_IND_STRU
 * Description : reg success confirm
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER                               /* _H2ASN_Skip */
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId; /* _H2ASN_Skip */
    VOS_UINT16                          usOpId;
}XREG_XSD_REG_SUCCESS_IND_STRU;

/*******************************************************************************
 8. Global  declaration
*******************************************************************************/

/*******************************************************************************
 9. Function declarations
*******************************************************************************/
/** ****************************************************************************
 * Name        : XSD_XREG_PIF_MSG_DATA
 * Description : H2ASN top level message structure definition
 *******************************************************************************/
typedef struct
{
    XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16   enMsgId;     /* _H2ASN_MsgChoice_Export XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16 */
    VOS_UINT8                           aucMsgBlock[2];

    /* _H2ASN_MsgChoice_When_Comment XSD_XREG_PIF_MSG_TYPE_ENUM_UINT16 */
}XSD_XREG_PIF_MSG_DATA;

/* _H2ASN_Length UINT32*/
/** ****************************************************************************
 * Name        : Xsd_xreg_pif_MSG
 * Description : H2ASN top level message structure definition
 *******************************************************************************/
typedef struct
{
    VOS_MSG_HEADER
    XSD_XREG_PIF_MSG_DATA               stMsgData;
}Xsd_xreg_pif_MSG;


#if ((VOS_OS_VER == VOS_WIN32) || (VOS_OS_VER == VOS_NUCLEUS))
#pragma pack()
#else
#pragma pack(0)
#endif

#ifdef __cplusplus
#if __cplusplus
}
#endif /* __cpluscplus */
#endif /* __cpluscplus */

#endif
